var CAWImageUpload = React.createClass({
  removeImage: function(i) {
    var thumbnails = this.props.valueLink.value;
    thumbnails.splice(i, 1);
    this.props.valueLink.requestChange(thumbnails);
  },

  handleUpload: function(e) {
    var fd = new FormData();
    var _this = this;
    
    if (e.currentTarget.files) {
      // TODO: Update to support uploading multiple files at once
      // TODO: display a spinner w/ the local file as the BG until
      // it's fully uploaded
      // Load one file
      fd.append('Filedata', e.currentTarget.files[0]);
  
      // Form validation token, generated by concrete5
      fd.append('ccm_token', this.props.valt);

      $.ajax({
        url: CCM_TOOLS_PATH + '/files/importers/quick',
        type: 'POST',
        cache: false,
        data: fd,
        processData: false,
        contentType: false,
        success: function(data, textStatus, jqXHR) {
          var thumbnails = _this.props.valueLink.value;
          thumbnails.push(data);
          _this.props.valueLink.requestChange(thumbnails);
        },
        error: function(jqXHR, textStatus, errorThrown) {
          // TODO: display error message
        }
      });
    }
  },

  render: function() {
    var thumbnails = this.props.valueLink.value;
    // TODO: include an upload callback that loads the uploaded image locally,
    // instead of the one off the server
    //
    return (
      <form className="upload-image">
        <label htmlFor="walkphotos" id="photo-tip">{ t('Upload a photo that best represents your walk.') }</label>
        {thumbnails.map(function(thumb, i) {
          // Grab just the name, so local files being uploaded have the same key as the hosted URL
          var filename = (thumb.url || '' + i).replace(/^.*[\\\/]/, '');
          return (
            <div
              key={filename}
              className="thumbnail"
              style={{backgroundImage: 'url(' + thumb.url + ')'}}>
              <a className="remove" onClick={this.removeImage.bind(this, i)}><i className="fa fa-times-circle" /></a>
            </div>
            );
        }, this)}
        <div className="thumbnail fileupload">
          <input className="ccm-al-upload-single-file" type="file" onChange={this.handleUpload} />
          <i className="fa fa-camera-retro fa-5x" />
          <span className="fileupload-new">{ t('Click to upload an image') }</span>
        </div>
      </form>
    );
  }
});

